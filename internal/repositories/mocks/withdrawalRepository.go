// Code generated by MockGen. DO NOT EDIT.
// Source: withdrawalRepository.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	reflect "reflect"

	models "github.com/dcwk/gophermart/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockWithdrawalRepository is a mock of WithdrawalRepository interface.
type MockWithdrawalRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWithdrawalRepositoryMockRecorder
}

// MockWithdrawalRepositoryMockRecorder is the mock recorder for MockWithdrawalRepository.
type MockWithdrawalRepositoryMockRecorder struct {
	mock *MockWithdrawalRepository
}

// NewMockWithdrawalRepository creates a new mock instance.
func NewMockWithdrawalRepository(ctrl *gomock.Controller) *MockWithdrawalRepository {
	mock := &MockWithdrawalRepository{ctrl: ctrl}
	mock.recorder = &MockWithdrawalRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWithdrawalRepository) EXPECT() *MockWithdrawalRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockWithdrawalRepository) Create(ctx context.Context, withdrawal *models.Withdrawal) (*models.Withdrawal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, withdrawal)
	ret0, _ := ret[0].(*models.Withdrawal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockWithdrawalRepositoryMockRecorder) Create(ctx, withdrawal interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockWithdrawalRepository)(nil).Create), ctx, withdrawal)
}

// FindUserWithdrawals mocks base method.
func (m *MockWithdrawalRepository) FindUserWithdrawals(ctx context.Context, userID int64) ([]*models.Withdrawal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindUserWithdrawals", ctx, userID)
	ret0, _ := ret[0].([]*models.Withdrawal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindUserWithdrawals indicates an expected call of FindUserWithdrawals.
func (mr *MockWithdrawalRepositoryMockRecorder) FindUserWithdrawals(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindUserWithdrawals", reflect.TypeOf((*MockWithdrawalRepository)(nil).FindUserWithdrawals), ctx, userID)
}
